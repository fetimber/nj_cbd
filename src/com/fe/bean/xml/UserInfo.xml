<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="UserInfo">
  <!-- Use type aliases to avoid typing the full classname every time. -->
  <typeAlias alias="UserInfo" type="com.fe.bean.xml.UserInfo"/>
  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->
       
  <resultMap id="UserInfoResult" class="UserInfo">
    <result property="userName" column="USERNAME"/>
    <result property="userPassWord" column="USERPASSWORD"/>
    <result property="id" column="ID"/>
  </resultMap>
  
  <!-- Select with no parameters using the result map for Account class. -->
  <select id="selectAll" resultMap="UserInfoResult">
    select userName,userPassWord,id from USERINFO
  </select>
  <!-- A simpler select example without the result map.  Note the
       aliases to match the properties of the target result class. -->
  <select id="selectUserInfoById" parameterClass="UserInfo" resultClass="UserInfo">
    select
      userName,
      userPassWord,
      id
    from USERINFO
    where USERNAME = #userName# 
    and USERPASSWORD = #userPassWord#
  </select>
   <select id="selectUserInfoByName" parameterClass="UserInfo" resultClass="UserInfo">
    select
      userName,
      userPassWord,
      id
    from USERINFO
    where USERNAME = #userName#
  </select>
  
  <!-- Insert example, using the Account parameter class -->
  <insert id="insertInfo" parameterClass="UserInfo">
    insert into USERINFO
     (
      ID,
      USERNAME,
      USERPASSWORD
      )
    values 
     (
       seq_userinfo.nextval,#userName#, #userPassWord# 
     )
  
  </insert>
  <!-- Update example, using the Account parameter class -->
  <update id="updateAccount" parameterClass="UserInfo">
    update USERINFO set
      USERPASSWORD = #userPassWord#
    where
      USERNAME = #userName#
  </update>
  <!-- Delete example, using an integer as the parameter class -->
  <delete id="deleteAccountById" parameterClass="string">
    delete from USERINFO where ID = #id#
  </delete>
</sqlMap>


